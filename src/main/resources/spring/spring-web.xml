<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <description>本配置文件由DispatcherServlet使用，提供其相关的Spring MVC配置</description>

    <!-- spring mvc 注解，配置了context:component-scan就不需要以下配置了 -->
    <!--<context:annotation-config/>-->

    <!-- DispatcherServlet上下文，只扫描@Controller类型的bean，忽略其他类型的bean -->
    <context:component-scan base-package="me.ianhe.controller" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--解决@ResponseBody注解中文乱码问题，必须放在annotation-driven上面-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                &lt;!&ndash;返回字符串&ndash;&gt;
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                &lt;!&ndash;返回对象，转成json&ndash;&gt;
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>-->

    <!-- 扩充了mvc注解驱动，可以将请求参数绑定到控制器参数，简化配置：
        (1)自动注册DefaultAnnotationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持-->
    <mvc:annotation-driven conversion-service="dateConverter">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="dateConverter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="me.ianhe.config.DateConverter"></bean>
                <bean class="me.ianhe.config.DateTimeConverter"></bean>
            </set>
        </property>
    </bean>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <bean class="me.ianhe.interceptor.AdminAuthInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- freemarker配置 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/templates"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="locale">zh_CN</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="whitespace_stripping">true</prop>
                <!-- 设置数字格式，防止出现,号，默认2位 -->
                <prop key="number_format">0.##</prop>
                <!--模板碰到null时不提示异常，但admin里导入frame会报错-->
                <!--<prop key="classic_compatible">true</prop>-->
            </props>
        </property>
    </bean>

    <!-- 配置viewResolver，可以使用多个viewResolver，使用order属性排序，InternalResourceViewResolver放在最后。 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="requestContextAttribute" value="request"/>
    </bean>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- the maximum file size in bytes : 10M -->
        <property name="maxUploadSize" value="10485760"/>
        <!-- the maximum in memory size allowed in bytes : 10M -->
        <property name="maxInMemorySize" value="10485760"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSizePerFile" value="10485760"/>
    </bean>
</beans>