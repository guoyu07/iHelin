<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.ianhe.dao.FiCustomerMapper">
    <resultMap id="BaseResultMap" type="me.ianhe.db.entity.FiCustomer">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="credit_days" property="creditDays" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, customer_name, credit_days
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from fi_customer
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getAllCustomer" resultType="me.ianhe.db.entity.FiCustomer">
        select
        <include refid="Base_Column_List"/>
        from fi_customer
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from fi_customer
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="me.ianhe.db.entity.FiCustomer" useGeneratedKeys="true" keyProperty="id">
        insert into fi_customer (customer_name, credit_days)
        values (#{customerName,jdbcType=VARCHAR}, #{creditDays,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="me.ianhe.db.entity.FiCustomer" useGeneratedKeys="true" keyProperty="id">
        insert into fi_customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerName != null">
                customer_name,
            </if>
            <if test="creditDays != null">
                credit_days,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerName != null">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="creditDays != null">
                #{creditDays,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="me.ianhe.db.entity.FiCustomer">
        update fi_customer
        <set>
            <if test="customerName != null">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="creditDays != null">
                credit_days = #{creditDays,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.ianhe.db.entity.FiCustomer">
        update fi_customer
        set customer_name = #{customerName,jdbcType=VARCHAR},
        credit_days = #{creditDays,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="listByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fi_customer
        <where>
            <if test="customerName != null">
                and customer_name like concat('%',#{customerName,jdbcType=VARCHAR},'%')
            </if>
        </where>
    </select>
    <select id="listCount" resultType="int">
        select
        count(id)
        from fi_customer
        <where>
            <if test="customerName != null">
                and customer_name like concat('%',#{customerName,jdbcType=VARCHAR},'%')
            </if>
        </where>
    </select>
    <select id="getCountByCustomerName" resultType="int">
        select
        count(1)
        from fi_customer
        where customer_name = #{customerName,jdbcType=VARCHAR}
    </select>
</mapper>